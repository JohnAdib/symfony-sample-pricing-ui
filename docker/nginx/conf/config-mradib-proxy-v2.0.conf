# --------------------------------------------------------------- SSL
ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

# include snippets/ssl-params.conf;

ssl_session_timeout 10m;
ssl_session_tickets off;
# intermediate configuration. tweak to your needs.
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
ssl_protocols TLSv1.2 TLSv1.3;

ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

ssl_prefer_server_ciphers on;


# --------------------------------------------------------------- HSTS
add_header Strict-Transport-Security "max-age=2592000; includeSubdomains; preload" always;


# --------------------------------------------------------------- INDEX
index index.php index.html;



# --------------------------------------------------------------- LOCATION ROOT
location / {
	fastcgi_buffers 8 256k; # increase the buffer size for PHP-FTP
	fastcgi_buffer_size 256k; # increase the buffer size for PHP-FTP
	fastcgi_busy_buffers_size 256k;
	#fastcgi_connect_timeout 60;
	#fastcgi_send_timeout 300;
	#fastcgi_read_timeout 300;

	# First attempt to serve request as file, then
	# as directory, then fall back to displaying a 404.
	# try_files $uri $uri/ =404;
	try_files $uri $uri/ /index.php$is_args$args;

	if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain charset=UTF-8';
		add_header 'Content-Length' 0;

		return 204;
	}
}

# --------------------------------------------------------------- PHP FILES
# pass PHP scripts to FastCGI server
# location ~ \.php$ {
# 	include snippets/fastcgi-php.conf;
# 	fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
# }

location ~ \.php$ {
	include fastcgi_params;
	fastcgi_pass php:9000;
	fastcgi_index index.php;
	fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
}



# --------------------------------------------------------------- SYSTEM Log
location /stat_nginx {
	# Turn on stats
	stub_status on;
	access_log off;
	# only allow access from 192.168.1.5 #
	# allow 192.168.1.5;
	# deny all;
}


# --------------------------------------------------------------- SYSTEM FILES
location ~ /\.ht    {deny all; return 404;}
location ~ /\.svn/  {deny all; return 404;}
location ~ /\.git/  {deny all; return 404;}
location ~ /\.hg/   {deny all; return 404;}
location ~ /\.bzr/  {deny all; return 404;}


# --------------------------------------------------------------- STATIC FILES
location = /favicon.ico { log_not_found off; access_log off; expires 1M;}
location = /robots.txt { log_not_found off; access_log off; allow all; }
location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ { expires max; log_not_found off;}
location ~* \.(eot|otf|svg|ttf|woff|woff2|css|js|json)$ { add_header 'Access-Control-Allow-Origin' '*' always; expires max;}


# --------------------------------------------------------------- INCREASE LIMIT
client_max_body_size 100M;


# --------------------------------------------------------------- SET SECURITY LIMIT
# read more here http://tautt.com/best-nginx-configuration-for-security/

# don't send the nginx version number in error pages and Server header
server_tokens off;


# when serving user-supplied content,
# include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
# to disable content-type sniffing on some browsers.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
add_header X-Content-Type-Options nosniff;


# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
# this particular website if it was disabled by the user.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";


# --------------------------------------------------------------- REDIRECT TO NON WWW
if ($host ~ ^www\.(?<domain>.+)$) {
    return  301 $scheme://$domain$request_uri;
}
